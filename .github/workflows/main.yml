name: Open Space Toolkit Astrodynamics GitHub Actions CI

on:
  push:
    branches:
      - /^\d+\.\d+(\.\d+)?(-\S*)?$/
      - master
      - main
      - dev
  pull_request:
    branches:
      - master
      - main

env:
  LANG: "en_US.UTF-8"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build Development Images
        run: |
          make build-development-images

      - name: Export Env Variables
        uses: secrethub/actions/env-export@v0.2.1
        env:
          SECRETHUB_CREDENTIAL: ${{ secrets.SECRETHUB_CREDENTIAL }}
          DOCKER_USERNAME: secrethub://remy15/app/docker/username
          DOCKER_PASSWORD: secrethub://remy15/app/docker/password

      - name: Deploy Development Image
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          make deploy-development-images
      # - name: Login DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: $USERNAME
      #     password: $PASSWORD
      # - name: Deploy Development Image
        # run: make deploy-development-images

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Run Unit Tests Cpp
        run: make test-unit-cpp-debian

      - name: Run Unit Tests Python
        run: make test-unit-python-debian

      - name: Deploy Cpp Coverage Analysis Results
        run: make deploy-coverage-cpp-results

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Deploy Image
        run: make deploy-images

      - name: Deploy Documentation
        run: make deploy-documentation

      - name: Build Packages
        run: make build-packages

      - name: Deploy Packages to GitHub Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: (./packages/cpp/* && ./packages/python/*)
          tag: ${{ github.ref }}
          # overwrite: true
          file_glob: true

      - name: Deploy Python package to PyPI
        run: make deploy-packages-python
